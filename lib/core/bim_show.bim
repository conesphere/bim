#!/bin/bash

# HINT: 
#  might print  "\033]0;SOMESTRING\007" to actually set xterm title

# bim_show "menuname" 
# shows a select menu for bim on the screen 
# it tries to get some globally defined hashes and arrays 
# defining the menu options, and prints that menu, together 
# with some extra opts back to the user. 
bim_show() {
	local BIM_MENUNAME="${1}"
	shift
	local BIM_SETUP_FUNC="${1}"
	shift
	local BIM_CLEANUP_FUNC="${1}"
	shift
	local RELOAD_MENU="true"
	while [[ "${RELOAD_MENU}" = "true" ]]
	do
		RELOAD_MENU="false"
		if [[ -n "${BIM_SETUP_FUNC}" ]] 
		then
			${BIM_SETUP_FUNC} || echo "setup call: ${BIM_SETUP_FUNC} failed with returncode $?" 
		fi
		MENUSTR=$(declare -p "${BIM_MENUNAME}_entry" 2> /dev/null || echo "()")
		TOPICSTR=$(declare -p "${BIM_MENUNAME}_topic" 2> /dev/null || echo "()")
		ENABLESTR=$(declare -p "${BIM_MENUNAME}_enable" 2> /dev/null || echo "()")
		REPLYSTR=$(declare -p "${BIM_MENUNAME}_reply" 2> /dev/null || echo "()")
		REPLYHELPSTR=$(declare -p "${BIM_MENUNAME}_reply_help" 2> /dev/null || echo "()")
		PS3="
selection (? for help) ---> "
		declare -x -A MENUDICT=${MENUSTR#*=}
		declare -x -a TOPIC=${TOPICSTR#*=}
		declare -x -A ENABLE=${ENABLESTR#*=}
		declare -x -A REPLYDICT=${REPLYSTR#*=}
		declare -x -A REPLYHELP=${REPLYHELPSTR#*=}

		declare -x -a MENUKEYS=()
		declare -x -a MENUSORTED=()
		declare -x -A MENU=()
		
		# this sorting is a bit more complicated because "[ ]" and "[X]" are sorted 
		# differently, so we strip that from the string in the first place and later 
		# to be efficient we do use the "entry enabled" check to recover that data. 
		declare -x -A MENUUNSORTED=()
		for entry in "${!MENUDICT[@]}"
		do
			MENUUNSORTED["${entry/\[X\]/[ ]}"]="${entry}"
		done
		IFS=$'\n' MENUSORTED=($(sort <<<"${!MENUUNSORTED[*]}"))
		unset IFS	

		for entry in "${MENUSORTED[@]}"
		do
			realentry="${MENUUNSORTED[${entry}]}"
			if [[ -n "${ENABLE[${realentry}]}" ]]
			then 
				if "${ENABLE[${realentry}]}"
				then
					# good entry is enabled 
					echo -n 
				else
					continue
				fi
			fi
			MENUKEYS+=("${realentry#_*_ }")
			MENU["${realentry#_*_ }"]="${MENUDICT[${realentry}]}"
		done

		# configure reply defaults (only ? is hardcoded)
		REPLYDICT["q"]="exit"
		REPLYDICT["r"]="break"
		REPLYDICT["sh"]="bim_shell"

		# configure default help text for q r and ? 
		REPLYHELP["sh"]="show a debug shell prompt"
		REPLYHELP["r"]="Leave this Menu (return)"
		REPLYHELP["q"]="Leave the Program (quit)"
		REPLYHELP["?"]="This Help"

		if [[ -n "${TOPIC}" ]]
		then
			echo 
			echo "${TOPIC[@]}"
		fi
		echo
		select item in "${MENUKEYS[@]}"
		do
			if [[ -z "${item}" ]] 
			then
				# get all args except for the reply cmd 
				AREPLY=(${REPLY})
				REPLY="${AREPLY[0]}"
				ARGS="${AREPLY[@]:1}"
				if [[ -n ${REPLYDICT["${REPLY}"]} ]]
				then
					if [[ -z "${ARGS}" ]]
					then
						${REPLYDICT["${REPLY}"]} || echo "reply command failed, returncode $?"
					else
						${REPLYDICT["${REPLY}"]} "${ARGS[@]}" || echo "reply command failed, returncode $?"
					fi
					RELOAD_MENU="true"
					break
				fi
				# print the help here
				if [[ "${REPLY}" = "?" ]]
				then
					echo ""
					echo "This is Help for Menu:    ${TOPIC[@]}"
					echo ""
					echo "You might also use the following commands:"
					echo ""
					for opt in "${!REPLYHELP[@]}"
					do
						echo "${opt}	${REPLYHELP[${opt}]}"
					done
					RELOAD_MENU="true"
					break
				fi
			else
				if [[ -n ${MENU["${item}"]} ]]
				then 
					${MENU["${item}"]} || echo "menu command failed, returncode $?"
					RELOAD_MENU="true"
					break
				fi
			fi
			# last but not least we do start over with our menu and reload the complete thing 
			RELOAD_MENU="true"
		done
	done
	if [[ -n "${BIM_CLEANUP_FUNC}" ]] 
	then
		${BIM_CLEANUP_FUNC} || echo "cleanup call: ${BIM_CLEANUP_FUNC} failed with returncode $?" 
	fi
}

